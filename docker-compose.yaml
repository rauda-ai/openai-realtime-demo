services:
  websocket-server:
    build: ./websocket-server
    env_file: 
      - ./.env
    environment:
      - PORT=${WEBSOCKET_PORT:-8081}
      - WEBSOCKET_HOST=0.0.0.0
      - EXTERNAL_URL=${PUBLIC_URL:-https://realtime.sandbox.rauda.ai}
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${WEBSOCKET_PORT:-8081}/public-url"]
      interval: 10s
      timeout: 5s
      retries: 5

  webapp:
    build:
      context: ./webapp
      args:
        # URLs and connection details
        - WEBSOCKET_SERVER_URL=http://websocket-server:${WEBSOCKET_PORT:-8081}
        - NEXT_PUBLIC_WEBSOCKET_SERVER_URL=${PUBLIC_URL:-https://realtime.sandbox.rauda.ai}
        
        # Twilio credentials - from env file
        - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID:-}
        - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN:-}
        - TWILIO_WEBHOOK_URL=${TWILIO_WEBHOOK_URL:-}
        
        # Feature flags
        - ENABLE_TWILIO=${ENABLE_TWILIO:-true}
        - NEXT_PUBLIC_ENABLE_TWILIO=${NEXT_PUBLIC_ENABLE_TWILIO:-true}
    env_file:
      - ./.env
    environment:
      # Runtime environment variables
      - PORT=${WEBAPP_PORT:-3000}
      - NEXT_PRIVATE_WEBSOCKET_SERVER_URL=http://websocket-server:${WEBSOCKET_PORT:-8081}
      - NEXT_PUBLIC_WEBSOCKET_SERVER_URL=${PUBLIC_URL:-https://realtime.sandbox.rauda.ai}
      
      # Runtime Twilio configuration (optional override of build-time values)
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID:-}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN:-}
      - TWILIO_WEBHOOK_URL=${TWILIO_WEBHOOK_URL:-}
      
      # Feature flags runtime config
      - ENABLE_TWILIO=${ENABLE_TWILIO:-true}
      - NEXT_PUBLIC_ENABLE_TWILIO=${NEXT_PUBLIC_ENABLE_TWILIO:-true}
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${WEBAPP_PORT:-3000}"]
      interval: 10s
      timeout: 5s
      retries: 5

  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app-network
    depends_on:
      webapp:
        condition: service_healthy
      websocket-server:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
